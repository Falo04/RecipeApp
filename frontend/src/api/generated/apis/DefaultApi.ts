/* tslint:disable */
/* eslint-disable */
/**
 * Unnamed Galvyn API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiErrorResponse,
} from '../models/index';

export interface FinishOidcLoginRequest {
    code?: string;
    state?: string;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Begin to log in with the oidc provider.
     * Begin to log in with the oidc provider.
     */
    async beginOidcLoginRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/v1/oidc/begin-login`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Begin to log in with the oidc provider.
     * Begin to log in with the oidc provider.
     */
    async beginOidcLogin(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.beginOidcLoginRaw(initOverrides);
    }

    /**
     * Redirected from oidc provider. Finish login.
     * Redirected from oidc provider. Finish login.
     */
    async finishOidcLoginRaw(requestParameters: FinishOidcLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters['code'] != null) {
            queryParameters['code'] = requestParameters['code'];
        }

        if (requestParameters['state'] != null) {
            queryParameters['state'] = requestParameters['state'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/v1/oidc/finish-login`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Redirected from oidc provider. Finish login.
     * Redirected from oidc provider. Finish login.
     */
    async finishOidcLogin(requestParameters: FinishOidcLoginRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.finishOidcLoginRaw(requestParameters, initOverrides);
    }

    /**
     * Log out the current user.
     * Log out the current user.
     */
    async logoutRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/v1/oidc/logout`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Log out the current user.
     * Log out the current user.
     */
    async logout(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.logoutRaw(initOverrides);
    }

}
